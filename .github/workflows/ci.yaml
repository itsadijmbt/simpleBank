# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

#! this name will be seen in the gitrepos
name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

#* this job is named test it has steps and actions
  test:
    runs-on: ubuntu-latest

#? lists services that are external dependencies 
    services:
      # Label used to access the service container
    #! add necesary env from the make file
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        
        ports:
          - 5432:5432
          
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4


#! also we needed db migartions

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
      id: testgo1

    
#! migrations will be error ful as we dont have added the external go-migrate
    - name: Install migrate CLI
#? pipe connected is used to connect multiline commands as we have to move  migratecommand into bin inorder to get the commands working to usr/local/bin    
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/latest/download/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin/

    - name: Run migrations
      run: make migrateup

    - name: Test
      run: make test

#* we already had a gotest-v in make file

